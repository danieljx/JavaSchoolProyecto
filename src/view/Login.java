/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.Session;
import java.io.IOException;
import java.lang.reflect.Field;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import library.db.Connect;
import library.db.Service;

/**
 *
 * @author dvillanueva
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        contentLogin = new javax.swing.JPanel();
        loginPanel = new javax.swing.JPanel();
        userLabel = new javax.swing.JLabel();
        passLabel = new javax.swing.JLabel();
        users = new javax.swing.JTextField();
        passwords = new javax.swing.JPasswordField();
        setLog = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 51, 86));

        contentLogin.setBackground(new java.awt.Color(1, 47, 70));
        contentLogin.setAutoscrolls(true);

        loginPanel.setBackground(new java.awt.Color(0, 50, 74));

        userLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        userLabel.setForeground(new java.awt.Color(231, 229, 229));
        userLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        userLabel.setText("Usuario:");

        passLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        passLabel.setForeground(new java.awt.Color(231, 229, 229));
        passLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        passLabel.setText("Contraseña:");

        users.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usersActionPerformed(evt);
            }
        });

        passwords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordsActionPerformed(evt);
            }
        });

        setLog.setText("INGRESAR");
        setLog.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                setLogMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(userLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passLabel))
                        .addGap(18, 18, 18)
                        .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(users, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                            .addComponent(passwords)))
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(setLog, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addComponent(userLabel)
                        .addGap(0, 7, Short.MAX_VALUE))
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(users, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passLabel)
                    .addComponent(passwords, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(setLog, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout contentLoginLayout = new javax.swing.GroupLayout(contentLogin);
        contentLogin.setLayout(contentLoginLayout);
        contentLoginLayout.setHorizontalGroup(
            contentLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contentLoginLayout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addComponent(loginPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(55, Short.MAX_VALUE))
        );
        contentLoginLayout.setVerticalGroup(
            contentLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contentLoginLayout.createSequentialGroup()
                .addContainerGap(83, Short.MAX_VALUE)
                .addComponent(loginPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(116, 116, 116))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void usersActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
    }                                     

    private void setLogMouseClicked(java.awt.event.MouseEvent evt) {                                    
        try {
            this.getValidLogin();
        } catch (IOException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                   
    private void getValidLogin() throws IOException, ClassNotFoundException, InstantiationException, IllegalAccessException, SQLException {                              
        String user     = "";
        String pass     = "";
        boolean userSta = false;
        int countUser   = 0;
        int trytUser    = 0;
        String fieldPass = new String(passwords.getPassword());
        if(users.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Ingrese Usuario");
        } else if(fieldPass.equals("")) {
            JOptionPane.showMessageDialog(this, "Ingrese Contraseña");
        } else {
            String sql = "Select u.user_id\n";
                   sql+= "	,u.user_pass\n";
                   sql+= "	,u.user_try\n";
                   sql+= "	,u.user_sta\n";
                   sql+= "	,u.user_name\n";
                   sql+= "	,u.lastvisitDate\n";
                   sql+= "	,if(t.third_id is null,u.user_title,concat(ifnull(t.third_name,''),' ',ifnull(t.third_lastname,''))) as user_names\n";
                   sql+= "From sys_user u\n";
                   sql+= "Left Join mod_third t on t.third_id = u.third_id\n";
                   sql+= "Where u.user_name = '" + users.getText() + "'\n";
            Connect db = Service.getInstance().getConnectDB();
            List<Map<String, String>> rows = db.setQueryGetList(sql);
            for (Map<String, String> map : rows) {
                pass       = (String) map.get("user_pass");
                trytUser   = Integer.parseInt((String) map.get("user_try"));
                userSta    = "S".equals((String) map.get("user_sta"));
                Session.setUserId(Integer.parseInt((String) map.get("user_id")));
                Session.setUserStatus(userSta);
                Session.setUserName((String) map.get("user_name"));
                Session.setUserThirdNames((String) map.get("user_names"));
                Session.setUserLastLog((String) map.get("lastvisitDate"));
                countUser++;
            }
            if(countUser > 0) {
                if(userSta) {
                    if(fieldPass.equals(pass)) {
                        String sqlU = "Update sys_user set lastvisitDate = now(), user_try = 0 Where user_id = " + Session.getUserId();
                               db.query.executeUpdate(sqlU);
                               new Index(this).setVisible(true);
                               users.setText("");
                               passwords.setText("");
                               this.setVisible(false);
                    } else {
                        if(trytUser < 3 && Session.getUserId() != 1) {
                            String sqlU = "Update sys_user\n";
                                   sqlU+= "Set user_try = (try_user + 1)\n";
                                   sqlU+= "   ,user_sta = if(try_user<3,'S','N')\n";
                                   sqlU+= "Where user_id = " + Session.getUserId() + "\n";
                                   db.query.executeUpdate(sqlU);
                            if((trytUser+1) < 3) {
                                JOptionPane.showMessageDialog(this, "Error Contraseña | Quedan " + (3-(trytUser+1)) + " Intentos");					
                            } else {
                                JOptionPane.showMessageDialog(this, "Usuario Bloqueado. Comunicarse con el Departamento de Sistemas");
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Error Contraseña");
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Usuario Bloqueado. Comunicarse con el Departamento de Sistemas");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Error Usuario no Existe");
            }
        }      
    }
    private void passwordsActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    // Variables declaration - do not modify                     
    private javax.swing.JPanel contentLogin;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JLabel passLabel;
    private javax.swing.JPasswordField passwords;
    private javax.swing.JButton setLog;
    private javax.swing.JLabel userLabel;
    private javax.swing.JTextField users;
    // End of variables declaration                   
}
